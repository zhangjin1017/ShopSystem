<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.my.pojo.Orders">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="business_id" jdbcType="INTEGER" property="businessId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="logistics" jdbcType="VARCHAR" property="logistics" />
    <result column="num" jdbcType="INTEGER" property="num" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, business_id, user_id, goods_id, date, type, address_id, logistics, num
  </sql>
  <select id="selectByExample" parameterType="com.my.pojo.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.my.pojo.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.my.pojo.Orders">
    insert into orders (order_id, business_id, user_id, 
      goods_id, date, type, address_id, 
      logistics, num)
    values (#{orderId,jdbcType=INTEGER}, #{businessId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=INTEGER}, #{date,jdbcType=DATE}, #{type,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER}, 
      #{logistics,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.my.pojo.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="logistics != null">
        logistics,
      </if>
      <if test="num != null">
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="logistics != null">
        #{logistics,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.my.pojo.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.businessId != null">
        business_id = #{record.businessId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.logistics != null">
        logistics = #{record.logistics,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set order_id = #{record.orderId,jdbcType=INTEGER},
      business_id = #{record.businessId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      date = #{record.date,jdbcType=DATE},
      type = #{record.type,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER},
      logistics = #{record.logistics,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.my.pojo.Orders">
    update orders
    <set>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="logistics != null">
        logistics = #{logistics,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.my.pojo.Orders">
    update orders
    set business_id = #{businessId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      date = #{date,jdbcType=DATE},
      type = #{type,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER},
      logistics = #{logistics,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.my.pojo.Orders">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="business_id" jdbcType="INTEGER" property="businessId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="logistics" jdbcType="VARCHAR" property="logistics" />
    <result column="num" jdbcType="INTEGER" property="num" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, business_id, user_id, goods_id, date, type, address_id, logistics, num
  </sql>
  <select id="selectByExample" parameterType="com.my.pojo.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from orders
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.my.pojo.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.my.pojo.Orders">
    insert into orders (order_id, business_id, user_id, 
      goods_id, date, type, address_id, 
      logistics, num)
    values (#{orderId,jdbcType=VARCHAR}, #{businessId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=INTEGER}, #{date,jdbcType=DATE}, #{type,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER}, 
      #{logistics,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.my.pojo.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="logistics != null">
        logistics,
      </if>
      <if test="num != null">
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="logistics != null">
        #{logistics,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.my.pojo.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.businessId != null">
        business_id = #{record.businessId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.logistics != null">
        logistics = #{record.logistics,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set order_id = #{record.orderId,jdbcType=VARCHAR},
      business_id = #{record.businessId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      date = #{record.date,jdbcType=DATE},
      type = #{record.type,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER},
      logistics = #{record.logistics,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.my.pojo.Orders">
    update orders
    <set>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="logistics != null">
        logistics = #{logistics,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.my.pojo.Orders">
    update orders
    set business_id = #{businessId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      date = #{date,jdbcType=DATE},
      type = #{type,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER},
      logistics = #{logistics,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
</mapper>